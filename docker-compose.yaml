version: "3.8"

services:
  # REDIS
  redis:
    restart: always
    image: redis:5
    container_name: azecho-redis
    volumes:
      - redis-data:/var/lib/redis/
    ports:
      - "6378:6379"
    networks:
      - azecho-net
  # POSTGRES
  postgres:
    restart: always
    image: postgres:13
    container_name: azecho-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: azecho_db
    ports:
      - "5431:5432"
    networks:
      - azecho-net
  #selenium:
   # image: selenium/standalone-chrome
    #container_name: azecho-selenium
    #ports:
    #  - "4444:4444"
    restart: always
    # DJANGO SERVER
  django:
    restart: always
    container_name: azecho-django
    build:
      context: ./backend/
      dockerfile: ./docker/server.Dockerfile
    env_file:
      - ./backend/.env
    volumes:
      - static-volume:/app/backend/static
    ports:
      - "8000:8000"
    #    expose:
    #      - 8000
    depends_on:
      - postgres
      - redis
    networks:
      - azecho-net
  # CELERY WORKER & BEAT
  celery:
    restart: always
    container_name: azecho-celery
    build:
      context: ./backend/
      dockerfile: ./docker/celery.Dockerfile
    volumes:
      - redis-data:/var/lib/redis/
    depends_on:
      - redis
      - django
    networks:
      - azecho-net
  # CELERY FLOWER
  flower:
    image: mher/flower:0.9.7
    container_name: azecho-flower
    command: [ 'flower', '--broker=redis://redis:6378', '--port=5555' ]
    ports:
      - "5557:5555"
    volumes:
      - redis-data:/var/lib/redis/
    depends_on:
      - redis
    #FAST API WEBSOCKETS
  fastapi:
    restart: always
    container_name: azecho-fastapi
    build:
      context: ./websocket/
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - django
      - postgres
    networks:
        - azecho-net
      # REACT CLIENT
      #client:
      # restart: always
      #command: npm start
      #container_name: azecho-react
      #build:
      #  context: ./client/
      #  dockerfile: Dockerfile
      #ports:
      #  - "3000:3000"
      #stdin_open: true
      #depends_on:
      #  - django
      #networks:
      #  - azecho-net
  # # NGINX
  #  nginx:
  #    restart: always
  #    build:
  #      context: ./nginx
  #      dockerfile: Dockerfile
  #    container_name: azecho-nginx
  #    volumes:
  #      - static-volume:/app/server/static
  #    ports:
  #      - "80:80"
  #    depends_on:
  #      - django
  #    networks:
  #      - azecho-net


networks:
  azecho-net:
    driver: bridge

volumes:
  static-volume: { }
  server-data: { }
  postgres-data: { }
  redis-data: { }
  celery-data: { }
